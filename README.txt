# Lottery Smart Contract

This repository contains the source code of a lottery Smart Contract implemented in Solidity. The lottery allows users to buy tickets using ERC-20 tokens, and upon registration, they receive an ERC-721 token. Additionally, a factory is used for each user, creating different contracts for each.

## Main Features

### Buy Lottery Tickets with ERC-20 Tokens

Users can purchase lottery tickets using ERC-20 tokens. Each ticket has a price set in tokens, and users can buy multiple tickets at once.

### User Registration and ERC-721 Token Issuance

When a user registers, they are assigned a personal contract that manages their lottery tickets. Additionally, upon registration, they receive an ERC-721 token representing their participation in the lottery.

### Generate a Lottery Winner

A lottery winner can be generated by randomly selecting a ticket from the purchased tickets. The winner receives a percentage of the prize, while the rest is held in the contract.

## Directory Structure

The repository contains the following files:

- `lottery.sol`: Contains the source code of the main lottery Smart Contract.
- `README.md`: This file, providing information about the project.

## Dependencies

The Smart Contract uses the following OpenZeppelin dependencies:

- `ERC20`: For the implementation of ERC-20 tokens.
- `ERC721`: For the implementation of ERC-721 tokens.
- `Ownable`: To establish contract ownership.

## Usage

To use the Smart Contract, follow these steps:

1. Deploy the `lottery.sol` contract on a compatible Ethereum network.
2. Interact with the contract using a wallet that supports ERC-20 and ERC-721 tokens.
3. Use the provided functions to buy lottery tickets, register users, and generate a lottery winner.

